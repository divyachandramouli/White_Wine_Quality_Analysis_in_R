ggpairs(wq_sub, axislabels = 'internal')+
theme(title=element_text(size=4),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
)
knitr::opts_chunk$set(fig.width=100, fig.height=80)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub, axislabels = 'internal')+
knitr::opts_chunk$set(fig.width=100, fig.height=80)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub, axislabels = 'internal')+
wq_sub <- subset(wq, select = -c(X))
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub, axislabels = 'internal')
knitr::opts_chunk$set(fig.width=100, fig.height=80)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub, axislabels = 'internal')+
theme(title=element_text(size=4),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
)
`{r echo=FALSE, message=FALSE, warning=FALSE, fig.height=10, fig.width=10}
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(title=element_text(size=4),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(title=element_text(size=4),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(title=element_text(size=4),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(title=element_text(size=4),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
ggpairs(wq_sub)+
theme(title=element_text(size=4),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(title=element_text(size=4),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
wq_1 <- subset(wq, select = -c(X, quality))
ggcorr(wq_1, label=TRUE,label_color='black')
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(title=element_text(size=4),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.height=10, fig.width=10}
wq_sub <- subset(wq, select = -c(X))
ggplot(aes(x= alcohol), data = wq)+geom_histogram()+
scale_x_sqrt()
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(title=element_text(size=4),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(
axis.title.x = element_text(angle=45)
axis.ticks = element_blank(),
wq <- read.csv('wineQualityWhites.csv')
names(wq)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(
axis.title.x = element_text(angle=45),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(
axis.title.x = element_text(angle=45),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
ggplot(aes(x= alcohol), data = wq)+geom_histogram(binwidth=0.1)
ggplot(aes(x= pH), data = wq)+geom_histogram(binwidth=0.01)
ggplot(aes(x= density), data = wq)+geom_histogram(binwidth=0.001)
ggplot(aes(x= density), data = wq)+geom_histogram(binwidth=0.0001)
ggplot(aes(x= density), data = wq)+geom_histogram()
ggplot(aes(x= density), data = wq)+geom_histogram()+
scale_x_continuous(limits=(0,1.02))
ggplot(aes(x= density), data = wq)+geom_histogram()+
scale_x_continuous(limits=(0:1.02))
ggplot(aes(x= density), data = wq)+geom_histogram()+
scale_x_continuous()
ggplot(aes(x= density), data = wq)+geom_histogram(binwidth=0.01)+
scale_x_continuous()
ggplot(aes(x= density), data = wq)+geom_histogram(binwidth=0.001)+
scale_x_continuous()
ggplot(aes(x= density), data = wq)+geom_histogram(binwidth=0.0001)+
scale_x_continuous()
ggplot(aes(x= density), data = wq)+geom_histogram(binwidth=0.005)+
scale_x_continuous()
ggplot(aes(x= density), data = wq)+geom_histogram(binwidth=0.0001)+
scale_x_continuous()
ggplot(aes(x= density), data = wq)+geom_histogram(binwidth=0.001)+
scale_x_continuous()
ggplot(aes(x= total.sulfur.dioxide), data = wq)+geom_histogram(binwidth=2)
ggplot(aes(x= total.sulfur.dioxide), data = wq)+geom_histogram(binwidth=5)
ggplot(aes(x= free.sulfur.dioxide), data = wq)+geom_histogram(binwidth =2)
ggplot(aes(x= chlorides), data = wq)+geom_histogram(binwidth=0.005)
ggplot(aes(x= citric.acid), data = wq)+geom_histogram(binwidth=0.02)
ggplot(aes(x= citric.acid), data = wq)+geom_histogram(binwidth=0.01)
ggplot(aes(x= volatile.acidity), data = wq)+geom_histogram(binwidth = 0.01)+
scale_x_log10()
ggplot(aes(x= volatile.acidity), data = wq)+geom_histogram(binwidth = 0.02)+
scale_x_log10()
ggplot(aes(x= volatile.acidity), data = wq)+geom_histogram()+
scale_x_log10()
ggplot(aes(x= volatile.acidity), data = wq)+geom_histogram(binwidth = 0.01)
ggplot(aes(x= log10(volatile.acidity), data = wq)+geom_histogram()
ggplot(aes(x= log10(volatile.acidity), data = wq)+geom_histogram()
ggplot(aes(x= log10(volatile.acidity)), data = wq)+geom_histogram()
ggplot(aes(x= residual.sugar), data = wq)+geom_histogram(binwidth=0.5)
ggplot(aes(x= log10(residual.sugar)), data = wq)+geom_histogram(binwidth=0.1)
ggplot(aes(x= (residual.sugar)), data = wq)+geom_histogram(binwidth=0.1)+scale_x_log10()
ggplot(aes(x= (residual.sugar)), data = wq)+geom_histogram(binwidth=0.1)+scale_x_log10(breaks=seq(0,2,25))
ggplot(aes(x= (residual.sugar)), data = wq)+geom_histogram(binwidth=0.1)+scale_x_log10(breaks=seq(0,2,25), limits=c(0,25))
ggplot(aes(x= (residual.sugar)), data = wq)+geom_histogram(binwidth=0.1)+scale_x_log10 (breaks=seq(0,2,25))
ggplot(aes(x= (residual.sugar)), data = wq)+geom_histogram(binwidth=0.1)+scale_x_log10 (breaks=(0,2,4,6,8,10,12,14,16,18,20,22,24))
ggplot(aes(x= (residual.sugar)), data = wq)+
geom_histogram(binwidth=0.1)+
scale_x_log10 (breaks=(0,2,4,6,8,10,12,14,16,18,20,22,24))
ggplot(aes(x= (residual.sugar)), data = wq)+
geom_histogram(binwidth=0.1)+
scale_x_log10 (breaks=c(0,2,4,6,8,10,12,14,16,18,20,22,24))
ggplot(aes(x= (residual.sugar)), data = wq)+
geom_histogram(binwidth=0.1)+
scale_x_log10 (breaks=c(0,5,10,15,20,25))
ggplot(aes(x= (residual.sugar)), data = wq)+
geom_histogram(binwidth=0.1)+
scale_x_log10 (breaks=c(0,1,2,3,4,5,10,15,20,25))
ggplot(aes(x= (residual.sugar)), data = wq)+
geom_histogram(binwidth=0.1)+
scale_x_log10 (breaks=c(0,1,2,3,4,5,7,10,15,20,25))
ggplot(aes(x= (residual.sugar)), data = wq)+
geom_histogram(binwidth=0.1)+
scale_x_log10 (breaks=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,25))
scale_x_log10 (breaks=trans_breaks('log10', function(x) 10^x)
ggplot(aes(x= (residual.sugar)), data = wq)+
ggplot(aes(x= (residual.sugar)), data = wq)+
geom_histogram(binwidth=0.1)+
scale_x_log10(breaks=trans_breaks('log10', function(x) 10^x))
ggplot(aes(x= (residual.sugar)), data = wq)+
geom_histogram(binwidth=0.1)+
scale_x_log10(breaks=c(1,3.16,10,31.63))
ggplot(aes(x= (residual.sugar)), data = wq)+
geom_histogram(binwidth=0.1)+
scale_x_log10(breaks=waiver())
scale_x_log10(breaks=trans_breaks('log10', function(x) round(10^x,0))
ggplot(aes(x= (residual.sugar)), data = wq)+
ggplot(aes(x= (residual.sugar)), data = wq)+
geom_histogram(binwidth=0.1)+
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1)))
ggplot(aes(x= (residual.sugar)), data = wq)+
geom_histogram(binwidth=0.1)+
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1)))+
ggtitle('Residual sugar distribution - log10 transformation')
ggplot(aes(x= chlorides), data = wq)+geom_histogram(binwidth=0.005)+
xlim(0, quantile(wq$chlorides, probs=0.97))
ggplot(aes(x= chlorides), data = wq)+geom_histogram(binwidth=0.001)+
xlim(0, quantile(wq$chlorides, probs=0.97))
ggplot(aes(x= volatile.acidity), data = wq)+geom_histogram()+
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1)))+
ggtitle('Volatile acidity distribution - log10 transformation')
ggplot(aes(x= citric.acid), data = wq)+geom_histogram(binwidth=0.05)
ggplot(aes(x= citric.acid), data = wq)+geom_histogram(binwidth=0.02)
summary(wq$residual.sugar)
ggplot(aes(x= residual.sugar), data = wq)+geom_histogram(binwidth=0.5)
summary(wq$residual.sugar)
ggplot(aes(x= chlorides), data = wq)+geom_histogram(binwidth=0.002)
ggplot(aes(x= chlorides), data = wq)+geom_histogram(binwidth=0.001)
ggplot(aes(x= free.sulfur.dioxide), data = wq)+geom_histogram(binwidth =1)
ggplot(aes(x= free.sulfur.dioxide), data = wq)+geom_histogram(binwidth =5)
ggplot(aes(x= free.sulfur.dioxide), data = wq)+geom_histogram(binwidth =2.5)
ggplot(aes(x= density), data = wq)+geom_histogram(binwidth=0.0005)+
scale_x_continuous()
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1)))+
ggtitle('Residual sugar distribution - log10 transformation')
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1)))+
ggtitle('Residual sugar distribution - log10 transformation')
ggplot(aes(x=residual.sugar), data = wq)+
geom_histogram(binwidth=0.1)+
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1)))+
ggtitle('Residual sugar distribution - log10 transformation')
ggplot(aes(x= sulphates), data = wq)+geom_histogram(binwidth=0.01)+
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1)))+
ggtitle('Sulphates distribution - log10 transformation')
ggplot(aes(x= alcohol), data = wq)+geom_histogram()+
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1)))+
ggtitle('Alcohol distribution - log10 transformation')
ggplot(aes(x= alcohol), data = wq)+geom_histogram()+
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1),n=9))+
ggtitle('Alcohol distribution - log10 transformation')
ggplot(aes(x= alcohol), data = wq)+geom_histogram()+
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1),n=9))+
ggtitle('Alcohol distribution - log10 transformation')
ggplot(aes(x= alcohol), data = wq)+geom_histogram()+
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1),n=10))+
ggtitle('Alcohol distribution - log10 transformation')
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(GGally)
library(scales)
library(gridExtra)
library(RColorBrewer)
library(knitr)
library(psych)
library(memisc)
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(GGally)
library(scales)
library(gridExtra)
library(RColorBrewer)
library(knitr)
library(psych)
library(memisc)
# Load the Data
wq <- read.csv('wineQualityWhites.csv')
names(wq)
dim(wq)
str(wq)
summary(wq)
any(is.na(wq))
sum(duplicated(wq))
ggplot(aes(x= fixed.acidity), data = wq)+geom_histogram(binwidth=0.1)+
scale_x_continuous(breaks=seq(3,15),limits = c(3,15))
ggplot(aes(x= volatile.acidity), data = wq)+geom_histogram(binwidth = 0.01)
ggplot(aes(x= volatile.acidity), data = wq)+geom_histogram()+
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1)))+
ggtitle('Volatile acidity distribution - log10 transformation')
ggplot(aes(x= citric.acid), data = wq)+geom_histogram(binwidth=0.02)
summary(wq$residual.sugar)
ggplot(aes(x= residual.sugar), data = wq)+geom_histogram(binwidth=0.5)
ggplot(aes(x=residual.sugar), data = wq)+
geom_histogram(binwidth=0.1)+
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1)))+
ggtitle('Residual sugar distribution - log10 transformation')
ggplot(aes(x= residual.sugar), data = wq)+geom_histogram(binwidth=0.1)+
xlim(0, quantile(wq$residual.sugar, probs = 0.99))
ggplot(aes(x= chlorides), data = wq)+geom_histogram(binwidth=0.001)
ggplot(aes(x= chlorides), data = wq)+geom_histogram(binwidth=0.001)+
xlim(0, quantile(wq$chlorides, probs=0.97))
ggplot(aes(x= free.sulfur.dioxide), data = wq)+geom_histogram(binwidth =2.5)
ggplot(aes(x= total.sulfur.dioxide), data = wq)+geom_histogram(binwidth=5)
ggplot(aes(x= density), data = wq)+geom_histogram(binwidth=0.0005)+
scale_x_continuous()
ggplot(aes(x= pH), data = wq)+geom_histogram(binwidth=0.01)
ggplot(aes(x= sulphates), data = wq)+geom_histogram(binwidth=0.01)
ggplot(aes(x= sulphates), data = wq)+geom_histogram(binwidth=0.01)+
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1)))+
ggtitle('Sulphates distribution - log10 transformation')
ggplot(aes(x= alcohol), data = wq)+geom_histogram(binwidth=0.1)
ggplot(aes(x= alcohol), data = wq)+geom_histogram()+
scale_x_log10(breaks=trans_breaks('log10',function(x) round((10^x),1),n=10))+
ggtitle('Alcohol distribution - log10 transformation')
ggplot(aes(x= alcohol), data = wq)+geom_histogram()+
scale_x_sqrt()
ggplot(aes(x=factor(quality)), data = wq)+ geom_bar()
wq_sub <- subset(wq, select = -c(X))
ggpairs(wq_sub)+
theme(
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
wq_1 <- subset(wq, select = -c(X, quality))
ggcorr(wq_1, label=TRUE,label_color='black')
ggplot(aes(x=fixed.acidity, y=pH), data=wq)+
geom_point(alpha=1/10)+
geom_smooth(method='lm')
ggplot(aes(x=free.sulfur.dioxide, y=total.sulfur.dioxide), data=wq)+
geom_point(alpha=1/10)+geom_smooth(method='lm')+
scale_x_continuous(limits=c(0,200))
ggplot(aes(x=density, y=residual.sugar), data=wq)+geom_point()
ggplot(aes(x=density, y=residual.sugar), data=wq)+geom_point(alpha=1/40)+
scale_x_continuous(limits=c(0.98, 1.015))+
scale_y_continuous(limits=c(0,40))+geom_smooth(method='lm')
ggplot(aes(x=alcohol, y=density), data=wq)+geom_point()
ggplot(aes(x=alcohol, y=density), data=subset(wq, wq$density<1.01))+
geom_point(alpha=1/20,position='jitter')+
geom_smooth(method = 'lm')
cor(wq[, c(2:13)],
method = 'spearman')[ ,12]
wq$quality.discrete=factor(wq$quality)
summary(wq$quality.discrete)
summary(wq$quality)
wq$quality.bucket <- cut(wq$quality, breaks=c(0,4,7, 10),
labels=c('low', 'moderate', 'high'))
summary(wq$quality.bucket)
summary(wq$residual.sugar)
wq$residual.sugar.bucket <- cut(wq$residual.sugar, breaks = c(-Inf, 2,7.5,Inf),
labels= c('Low', 'Medium','High'))
summary(wq$residual.sugar.bucket)
wq$alcohol.bucket <- cut(wq$alcohol, breaks=c(0,9.5, 12, 15),
labels=c('low', 'moderate', 'high'))
summary(wq$alcohol.bucket)
summary(wq$density)
wq$density.bucket <- cut(wq$density, breaks=c(-Inf,0.992, 0.9955, Inf),
labels=c('low', 'medium', 'high'))
summary(wq$density.bucket)
ggplot(aes(x=quality.discrete, y=chlorides), data=wq)+
geom_boxplot(aes(color=quality.discrete))+
stat_summary(fun.y=mean,geom='point')
ggplot(aes(x=quality.discrete, y=density), data=wq)+
geom_boxplot(aes(color=quality.discrete))+
stat_summary(fun.y=mean,geom='point')+
coord_cartesian(ylim=c(0.985,1.01))
summary(wq$density)
with(wq,by(density,quality,summary))
with(wq,by(density,quality.bucket,summary))
with(wq,by(density.bucket,quality.bucket,summary))
ggplot(aes(x=quality.discrete, y=alcohol), data=wq)+
geom_boxplot(aes(color=quality.discrete))+
stat_summary(fun.y=mean,geom='point')
summary(wq$alcohol)
summary(wq$quality.bucket)
summary(subset(wq,quality >7)$alcohol > 10.51)
with(wq, by(alcohol.bucket,quality.bucket,summary))
ggplot(aes(x=density, y=residual.sugar), data=subset(wq,wq$density < 1.01))+
geom_point(aes(color=quality.bucket))+
scale_color_brewer(type='seq')
ggplot(aes(x=density, y=residual.sugar),
data= subset(wq, wq$density < 1.01 & wq$quality.bucket != 'moderate'))+
geom_point(aes(color=quality.bucket))
ggplot(aes(x=density, y=residual.sugar), data=subset(wq,wq$density < 1.01))+
geom_point(aes(color=alcohol.bucket))+
scale_color_brewer(type='seq')
ggplot(aes(x=density, y=residual.sugar), data=subset(wq,wq$density < 1.01))+
geom_point(aes(color=alcohol.bucket))+
scale_color_brewer(type='seq')+
facet_wrap(~quality.discrete)
ggplot(aes(x=alcohol, y=density), data=subset(wq, wq$density<1.01))+
geom_point(aes(color=quality.bucket),position='jitter')+
scale_color_brewer(type="seq")
ggplot(aes(x=alcohol, y=density),
data=subset(wq, wq$density<1.01 & wq$quality.bucket != 'moderate'))+
geom_point(aes(color=quality.bucket))
ggplot(aes(x=alcohol, y=density), data=subset(wq, wq$density<1.01))+
geom_point(aes(color=residual.sugar.bucket),position='jitter')+
scale_color_brewer(type="seq")
ggplot(aes(x=alcohol, y=density), data=subset(wq, wq$density<1.01))+
geom_point(aes(color=residual.sugar.bucket),position='jitter')+
scale_color_brewer(type="seq")+facet_wrap(~quality.discrete)
ggplot(aes(x=quality.discrete, y=alcohol), data=wq)+
geom_jitter(aes(color=residual.sugar.bucket))
m1 <- lm(I(quality)~I(alcohol), data=wq)
m2 <- update(m1, ~ . + density)
m3 <- update(m2, ~ . + chlorides)
m4 <- update(m3, ~ . + residual.sugar)
mtable(m1, m2, m3, m4)
p1 <- ggplot(aes(x=quality.discrete, y=alcohol), data=wq)+
geom_boxplot(aes(color=quality.discrete))+
stat_summary(fun.y=mean,geom='point')+
xlab('Quality Rating')+ylab('Alcohol level (% by volume)')+
ggtitle('Alcohol levels by Quality rating')
p2<- ggplot(aes(x=quality.discrete, y=density), data=wq)+
geom_boxplot(aes(color=quality.discrete))+
stat_summary(fun.y=mean,geom='point')+
xlab('Quality Rating')+ylab('Density (g/cubic cm)')+
ggtitle('Density by Quality rating')
grid.arrange(p1,p2,ncol=2)
ggplot(aes(x=alcohol, y=density),
data=subset(wq, wq$density<1.01 & wq$quality.bucket != 'moderate'))+
geom_point(aes(color=quality.bucket))+
ggtitle('Alcohol level vs Density by Quality bucket')+
xlab('Alcohol level (% by volume)')+
ylab('Density (g/cubic cm)')
ggplot(aes(x=alcohol, y=density), data=subset(wq, wq$density<1.01))+
geom_point(aes(color=residual.sugar.bucket),position='jitter')+
scale_color_brewer(type="seq")+
xlab('Alcohol level (% by volume)')+
ylab('Density (g/cubic cm)')+
ggtitle('Residual sugar buckets in density vs alcohol plot')
p1 <- ggplot(aes(x=quality.discrete, y=alcohol), data=wq)+
geom_boxplot(aes(color=quality.discrete))+
stat_summary(fun.y=mean,geom='point')+
xlab('Quality Rating')+ylab('Alcohol level (% by volume)')+
ggtitle('Alcohol levels by Quality rating')
p2<- ggplot(aes(x=quality.discrete, y=density), data=wq)+
geom_boxplot(aes(color=quality.discrete))+
stat_summary(fun.y=mean,geom='point')+
xlab('Quality Rating')+ylab('Density (g/cubic cm)')+
ggtitle('Density by Quality rating')
grid.arrange(p1,p2,ncol=2)
#### Plot One
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.width = 15, Plot_One}
p1 <- ggplot(aes(x=quality.discrete, y=alcohol), data=wq)+
geom_boxplot(aes(color=quality.discrete))+
stat_summary(fun.y=mean,geom='point')+
xlab('Quality Rating')+ylab('Alcohol level (% by volume)')+
ggtitle('Alcohol levels by Quality rating')
p2<- ggplot(aes(x=quality.discrete, y=density), data=wq)+
geom_boxplot(aes(color=quality.discrete))+
stat_summary(fun.y=mean,geom='point')+
xlab('Quality Rating')+ylab('Density (g/cubic cm)')+
ggtitle('Density by Quality rating')
grid.arrange(p1,p2,ncol=2)
ggplot(aes(x=alcohol, y=density),
data=subset(wq, wq$density<1.01 & wq$quality.bucket != 'moderate'))+
geom_point(aes(color=quality.bucket))+
ggtitle('Alcohol level vs Density by Quality bucket')+
xlab('Alcohol level (% by volume)')+
ylab('Density (g/cubic cm)')
ggplot(aes(x=alcohol, y=density),
data=subset(wq, wq$density<1.01 & wq$quality.bucket != 'moderate'))+
geom_point(aes(color=quality.bucket))+
ggtitle('Alcohol level vs Density by Quality bucket')+
xlab('Alcohol level (% by volume)')+
ylab('Density (g/cubic cm)')
ggplot(aes(x=alcohol, y=density), data=subset(wq, wq$density<1.01))+
geom_point(aes(color=residual.sugar.bucket),position='jitter')+
scale_color_brewer(type="seq")+
xlab('Alcohol level (% by volume)')+
ylab('Density (g/cubic cm)')+
ggtitle('Residual sugar buckets in density vs alcohol plot')
